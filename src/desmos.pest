WHITESPACE   =  _{ " " | "\t" | NEWLINE }
  
program      =  _{ SOI ~ expr ~ EOI }
    expr     =   { atom ~ (infix ~ atom)* }
    atom     =  _{ prefix? ~ primary ~ postfix?}
    infix    =  _{ add | sub | mul | div | paren }
      add    =   { "+" } // Addition
      sub    =   { "-" } // Subtraction
      mul    =   { "*" } // Multiplication
      div    =   { "/" } // Division
      paren  =   { "" }  // Implicit Multiplication
    prefix   =  _{ neg| sqrt| sin| cos| tan| csc| sec| cot| invsin| invcos| invtan| invcsc| invsec| invcot }
      neg    =   { "-" } // Negation
      sqrt = {"\\sqrt"}
      sin = {"\\sin"}
      cos = {"\\cos"}
      tan = {"\\tan"}
      csc = {"\\csc"}
      sec = {"\\sec"}
      cot = {"\\cot"}
      invsin = {"\\sin^{-1}"}
      invcos = {"\\cos^{-1}"}
      invtan = {"\\tan^{-1}"}
      invcsc = {"\\csc^{-1}"}
      invsec = {"\\sec^{-1}"}
      invcot = {"\\cot^{-1}"}
    postfix  =  _{ fac | pow }
      fac    =   { "!" } // Factorial
      pow    =   { "^" ~ ("{" ~ expr ~ "}") } // Exponentiation
    primary  =  _{ lit | fn_call | ident | frac}
      fn_call=   { ident? ~ "(" ~ expr ~ ("," ~ expr)* ~ ")" } // not really function call, just a tuple
      frac   =   { "\\" ~ "frac" ~ "{" ~ expr ~ "}" ~ "{" ~ expr ~ "}" }
      lit    =  _{float | int}
      float  =  @{ int ~ "." ~ int? ~ exp? | int ~ exp }
      exp    =  _{ ^"e" ~ ("+" | "-")? ~ int }
      int    =  @{ ASCII_DIGIT+ }
      ident  =  @{ASCII_ALPHA ~ ("{" ~ ASCII_ALPHANUMERIC ~ "}")?}

